# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.


def my_func(x: float, y: int):
    """Функция принимает два позиционных аргумента x, y и возвращает результат возведения x в степень у

    Позиционные параметры:
    :param x: float - действительное положительное число
    :param y: int - целое отрицательное число
    :return result: float - результат возведения числа x в степень у

    """

    try:
        x = float(x)
    except ValueError as e:
        print(f'Возникла ошибка с первым аргументом: {e}\nПервый аргумент должен относиться к классу float.')
        return None
    else:
        if x <= 0:
            print(f'В качестве х вы ввели {x}. Число x должно быть действительным положительным числом.')
            return None
    try:
        y = int(y)
    except ValueError as e:
        print(f'Возникла ошибка со вторым аргументом: {e}\nВторой аргумент должен относиться к классу int.')
        return None
    else:
        if y >= 0:
            print(f'В качестве y вы ввели {y}. Число y должно быть целым отрицательным числом.')
            return None
    # Решение через мохнатые точки **
    # result = x ** y

    # Решение через цикл
    tmp = x
    for i in range(abs(y) - 1):
        tmp = tmp * x
    result = 1 / tmp

    return result


result = my_func(2, -3)
if result != None:
    print(result)
else:
    print('Из-за наличия одной или нескольких ошибок при вводе входных данных работа функции была прекращена.')
