# 5. Реализовать формирование списка, используя функцию range() и возможности генератора.
# В список должны войти четные числа от 100 до 1000 (включая границы).
# Необходимо получить результат вычисления произведения всех элементов списка.
# Подсказка: использовать функцию reduce().

from functools import reduce


def my_func(prev_el, el):
    """Функция возвращает результат произведения двух целых чисел.
    Позиционные параметры:
    :param prev_el: int - первый множитель
    :param el: int - второй множитель
    :return : int - произведение
    """
    try:
        prev_el = int(prev_el)
    except ValueError as e:
        print(f'Возникла ошибка с первым аргументом: {e}\nВходные данные должны представлять собой целые числа.\n')
        return None
    try:
        el = int(el)
    except ValueError as e:
        print(f'Возникла ошибка со вторым аргументом: {e}\nВходные данные должны представлять собой целые числа.\n')
        return None
    return prev_el * el


my_list = [itm for itm in range(100, 1001) if not itm & 1]
print(f'Имеем лист из четных чисел:\n{my_list}')
if reduce(my_func, my_list) != None:
    print(f'Произведение всех элементов списка равно {reduce(my_func, my_list)}')
else:
    print('Из-за наличия одной или нескольких ошибок при вводе входных данных работа функции не была закончена.')


